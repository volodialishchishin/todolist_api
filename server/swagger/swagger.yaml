swagger: "2.0"
info:
  version: "1.0.0"
  title: "To do api"
host: "localhost:8080"
tags:
  - name: "todolist"
    description: "To do lists"
  - name: "user"
    description: "Operations about user"
schemes:
  - "http"
  - "https"
paths:
  /todolists:
    post:
      tags:
        - "todolist"
      summary: "Add new todo"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Todolist"
      responses:
        "201":
          description: "Success"
        "421":
          description: "No title"
      security:
        - Bearer: []
    get:
      tags:
        - "todolist"
      summary: "Get todos"
      responses:
        "200":
          description: "Success"
        "204":
          description: "No todo"
      security:
        - Bearer: []
  /todolists/{todolist_id}:
    delete:
      tags:
        - "todolist"
      summary: "Delete todo"
      description: "Returns a single pet"
      operationId: "getPetById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "todolist_id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
      security:
        - Bearer: []
    put:
      tags:
        - "todolist"
      summary: "Update  todo"
      description: ""
      parameters:
        - name: "todolist_id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Todolist"
      responses:
        "421":
          description: "No title"
        "200":
          description: "success"
      security:
        - Bearer: []
  /todolists/{todolist_id}/tasks:
    post:
      tags:
        - "todolist"
      summary: "Add task"
      parameters:
        - name: "todolist_id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Task"
      responses:
        "200":
          description: "successful operation"
        "421":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
      security:
        - Bearer: []
    get:
      tags:
        - "todolist"
      summary: "Get tasks"
      parameters:
        - name: "todolist_id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
        "204":
          description: "No todo"
          schema:
            $ref: "#/definitions/ApiResponse"
      security:
        - Bearer: []
  /todolists/{todolist_id}/tasks/{task_id}:
    delete:
      tags:
        - "todolist"
      summary: "Delete task"
      parameters:
        - name: "todolist_id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - name: "task_id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful delet"
      security:
        - Bearer: []
    put:
      tags:
        - "todolist"
      summary: "Update task"
      parameters:
        - name: "todolist_id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - name: "task_id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/UpdatedTask"
      responses:
        "200":
          description: "successful operation"
        "421":
          description: "No title"
      security:
        - Bearer: []
  /register:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "403":
          description: "forbidden"
        "200":
          description: "success"
  /login:
    post:
      tags:
        - "user"
      summary: "Create user"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "403":
          description: "invalid data"
        "200":
          description: "success"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: "object"
    properties:
      name:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  Todolist:
    type: "object"
    properties:
      title:
        type: "string"
    xml:
      name: "Todolist"
  Task:
    type: "object"
    properties:
      title:
        type: "string"
    xml:
      name: "Todolist"
  UpdatedTask:
    type: "object"
    properties:
      title:
        type: "string"
      status:
        type: "integer"
        format: "int64"
    xml:
      name: "Todolist"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
